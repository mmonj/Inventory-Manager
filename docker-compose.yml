services:
  django_app:
    build:
      context: .
      args:
        ENV_TYPE: dev
        UID: 1000
    image: inventory-manager-django-dev
    container_name: inventory-manager-dev
    command: >
      bash -c "
      trap 'echo SIGTERM received, shutting down...; exit' SIGTERM;
      while true; do
        sleep 1;
      done
      "
    tty: true
    user: "${UID}"
    ports:
      - 8001:8000
    volumes: # order is important: ignored (unmounted) volumes are listed before the bind mount
      - inv-mngr-node_modules:/app/node_modules
      - inv-mngr-venv:/app/.venv
      - ./:/app
    env_file:
      - .env.dev
    restart: unless-stopped

  # redis-overcommit-on-host
  redis-overcommit:
    build: https://github.com/bkuhl/redis-overcommit-on-host.git
    restart: "no"
    privileged: true
    volumes:
      - /proc/sys/vm:/mnt/vm

  redis:
    image: redis
    container_name: redis-inventory-manager
    command: bash -c "redis-server --port $$REDIS_PORT --requirepass $$REDIS_PASSWORD"
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - django_app

  scheduler_worker_default:
    image: inventory-manager-django-dev
    container_name: inventory-manager-scheduler-worker-default
    command: uv run python manage.py scheduler_worker
    user: "${UID}"
    volumes:
      - inv-mngr-venv:/app/.venv
      - ./:/app
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - django_app

volumes:
  inv-mngr-node_modules:
  inv-mngr-venv:
